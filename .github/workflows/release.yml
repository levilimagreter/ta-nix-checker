name: Build and Release TA-nix Checker

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    name: Build .deb and Publish Release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract version from tag
        id: vars
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Prepare build structure
        run: |
          mkdir -p build/deb/usr/local/bin
          mkdir -p build/rpm/usr/local/bin

      - name: Copy files to build dirs
        run: |
          cp scripts/ta_nix_verification_cli.py build/deb/usr/local/bin/
          cp scripts/ta_nix_verification_cli.py build/rpm/usr/local/bin/
          echo '#!/bin/bash' > build/deb/usr/local/bin/ta-nix-check
          echo '#!/bin/bash' > build/rpm/usr/local/bin/ta-nix-check
          echo 'exec python3 /usr/local/bin/ta_nix_verification_cli.py "$@"' >> build/deb/usr/local/bin/ta-nix-check
          echo 'exec python3 /usr/local/bin/ta_nix_verification_cli.py "$@"' >> build/rpm/usr/local/bin/ta-nix-check
          chmod +x build/deb/usr/local/bin/ta-nix-check
          chmod +x build/rpm/usr/local/bin/ta-nix-check

      - name: Show contents of build dir
        run: ls -lh build/deb/usr/local/bin/

      - name: Create control file for .deb
        run: |
          mkdir -p build/deb/DEBIAN
          echo "Package: ta-nix-checker" > build/deb/DEBIAN/control
          echo "Version: ${{ steps.vars.outputs.VERSION }}" >> build/deb/DEBIAN/control
          echo "Section: utils" >> build/deb/DEBIAN/control
          echo "Priority: optional" >> build/deb/DEBIAN/control
          echo "Architecture: all" >> build/deb/DEBIAN/control
          echo "Maintainer: Levi Lima Greter" >> build/deb/DEBIAN/control
          echo "Description: Verificador de pré-requisitos para o Splunk Add-on for Unix/Linux (TA-nix)" >> build/deb/DEBIAN/control

      - name: Build .deb package
        run: |
          dpkg-deb --build build/deb
          mv build/deb.deb ta-nix-checker_${{ steps.vars.outputs.VERSION }}.deb

      - name: Upload .deb and create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: "Versão ${{ steps.vars.outputs.VERSION }}"
          tag_name: v${{ steps.vars.outputs.VERSION }}
          files: ta-nix-checker_${{ steps.vars.outputs.VERSION }}.deb
          draft: false
          prerelease: false
